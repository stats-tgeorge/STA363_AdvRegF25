{
  "hash": "ed18b28cc28a3dd815919d24ac860db2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: 'Chapter 2 - Likelihoods'\nsubtitle: 'Does having boys or girls run in the family? '\n---\n\n\n\n## Lab Setup\n\n1) Copy the project lab folder located at *Home -> STA363_inst_files-> labs*. If you check the box next to the folder name, then click the small gear icon you can \"copy to\" and put a copy of the folder in your newly created folder. \n2) Now, click *File-> Open Project* and navigate to the project file in the folder you just copied. \n3) You can place your responses in the file *qmd* file included. \n\n## Introduction\n\nDoes having boys or girls run in the family?  Using demographic data from the National Longitudinal Survey of Youth, can we identify biases in sex composition patterns of children?  The data is found in Table 2 in the Rodgers and Doughty (2001) article, and relevant R code can be found under below.  \n\n\n## Questions\n\n#### Model 1 – Sex Unconditional Model.  Each child is independent of the others, and there is a constant probability ( ) that a child is a boy.\n\n1. Consider a small example with 3 families with compositions of children given by BBG, GBG, and GG.  \nFind the maximum likelihood estimator (MLE) for   by:\na)\tConducting a numerical search in R for the largest likelihood over a fine grid of values 0-1.\n\nb)\tConducting a numerical search in R for the largest log-likelihood between 0 and 1.\nIllustrate the process graphically, and report the maximum value of the likelihood and log-likelihood functions.  Does it make sense that both methods would agree (and agree with the mathematical approach)?\n\n\n2. Apply Model 1 to the NLSY data (families in Table 2.4 below who have 3 or fewer children).  Find the MLE for   by adapting the R code for (1). There are 5,626 families in the table. \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Family comp data table\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\ntable5chp2 <- data.frame(Famcomp, Numfams, Numchild)\n\ntable5chp2 |> kbl(col.names = c(\"Family Composition\",\n    \"Number of families\", \"Number of children\"),\n      caption = \"Table 2.4 Number of families and children in families with given composition in NLSY data.\") \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n<caption>Table 2.4 Number of families and children in families with given composition in NLSY data.</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Family Composition </th>\n   <th style=\"text-align:right;\"> Number of families </th>\n   <th style=\"text-align:right;\"> Number of children </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 930 </td>\n   <td style=\"text-align:right;\"> 930 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> G </td>\n   <td style=\"text-align:right;\"> 951 </td>\n   <td style=\"text-align:right;\"> 951 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BB </td>\n   <td style=\"text-align:right;\"> 582 </td>\n   <td style=\"text-align:right;\"> 1164 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BG </td>\n   <td style=\"text-align:right;\"> 666 </td>\n   <td style=\"text-align:right;\"> 1332 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GB </td>\n   <td style=\"text-align:right;\"> 666 </td>\n   <td style=\"text-align:right;\"> 1332 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GG </td>\n   <td style=\"text-align:right;\"> 530 </td>\n   <td style=\"text-align:right;\"> 1060 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BBB </td>\n   <td style=\"text-align:right;\"> 186 </td>\n   <td style=\"text-align:right;\"> 558 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BBG </td>\n   <td style=\"text-align:right;\"> 177 </td>\n   <td style=\"text-align:right;\"> 531 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BGG </td>\n   <td style=\"text-align:right;\"> 173 </td>\n   <td style=\"text-align:right;\"> 519 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> BGB </td>\n   <td style=\"text-align:right;\"> 148 </td>\n   <td style=\"text-align:right;\"> 444 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GBB </td>\n   <td style=\"text-align:right;\"> 151 </td>\n   <td style=\"text-align:right;\"> 453 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GGB </td>\n   <td style=\"text-align:right;\"> 125 </td>\n   <td style=\"text-align:right;\"> 375 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GBG </td>\n   <td style=\"text-align:right;\"> 182 </td>\n   <td style=\"text-align:right;\"> 546 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> GGG </td>\n   <td style=\"text-align:right;\"> 159 </td>\n   <td style=\"text-align:right;\"> 477 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n#### Model 2 – Sex Conditional Model.  The probability of having a boy depends on whether you’ve had boys previously, so Model 2 will have three parameters:\n\n = probability of a boy when previously have had an equal number of boys and girls (neutral)\n \n = probability of a boy when previously have had more boys than girls (boy bias)\n \n = probability of a boy when previously have had more girls than boys (girl bias)\n\n3. Write out the likelihood function given Model 2 for the small set of data in (1).  [You could also try BGG, GGB, BBB just for fun.]\n\n\n\n## Code \n\n\n\n\n\n#### Model 1: Sex Unconditional Model\n\nAssumes the sex for each birth is independent of other births\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Evaluate small set of possible values of pb\npb <- c(.3, .35, .375, .4, .45)  # possible values for prob a boy is born\nlik <- pb^3 * (1 - pb)^5         # likelihood of getting observed data\ncbind(pb, lik)                   # print table of results\nplot(pb, lik, xlab = \"possible values of pb\", ylab = \"Likelihood\")\nmax(lik)                         # maximum likelihood over 5 values of pb\npb[lik == max(lik)]              # value of pb where likelihood maximized\n\n# Evaluate finer grid of possible values of pb\npb <- seq(0, 1, length = 1001)   # possible values for prob a boy is born\nlik <- pb^3 * (1 - pb)^5         # likelihood of getting observed data\nplot(pb, lik, xlab = \"possible values of pb\", ylab = \"Likelihood\", type = \"l\")\nmax(lik)                         # maximum likelihood over 1001 values of pb\npb[lik == max(lik)]              # value of pb where likelihood maximized\n\nloglik <- 3 * log(pb) + 5 * log(1 - pb)      # find log likelihoods\nplot(pb, loglik, xlab = \"possible values of pb\", ylab = \"Loglikelihood\", \n     type = \"l\")\nmax(loglik)                    # maximum loglikelihood over 1001 values of pb\npb[loglik == max(loglik)]      # likelihood and loglikelihood max at same spot\nmle_pb_m1_small <- pb[loglik == max(loglik)]\nmax_logL_m1_small <- max(loglik)\n\n# Create ggplot of likelihood and log-likelihood functions\nmodel1grid <- data.frame(pb = pb, lik1 = lik, loglik1 = loglik)\nggplot(data = model1grid, aes(x = pb, y = lik1)) +\n  geom_line() +\n  labs(x = \"possible values of pb\", y = \"Likelihood\")\nggplot(data = model1grid, aes(x = pb, y = loglik1)) +\n  geom_line() +\n  labs(x = \"possible values of pb\", y = \"log Likelihood\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Apply Model 1 to NLSY data (for families with 3 or fewer children)\npb <- seq(0, 1, length = 10001)   # possible values for prob a boy is born\nlik <- pb^5416 * (1 - pb)^5256    # likelihood (too small)\nmax(lik)\nsummary(lik)  \n\n# loglikelihood of getting observed data\nloglik <- 5416 * log(pb) + 5256 * log(1 - pb)   \nplot(pb, loglik, xlab = \"possible values of pb\", ylab = \"Loglikelihood\", \n     type = \"l\")\nplot(pb[loglik > (-7500)], loglik[loglik > (-7500)],\n  xlab = \"possible values of pb\", \n  ylab = \"Loglikelihood\", type = \"l\")  # zoom plot\nmax(loglik)                 # maximum loglikelihood over all values of pb\npb[loglik == max(loglik)]   # MLE of pb\nmle_pb_m1_nlsy <- pb[loglik == max(loglik)]\nmax_logL_m1_nlsy <- max(loglik)\n\n# Create ggplot of likelihood and log-likelihood functions\nmodel1grid <- data.frame(pb = pb, lik1 = lik, loglik1 = loglik)\nggplot(data = model1grid, aes(x = pb, y = lik1)) +\n  geom_line() +\n  labs(x = \"possible values of pb\", y = \"Likelihood\")\nggplot(data = model1grid, aes(x = pb, y = loglik1)) +\n  geom_line() +\n  labs(x = \"possible values of pb\", y = \"log Likelihood\")\nmodel1grid |>\n  filter(loglik1 > (-7500)) |>\n  ggplot(aes(x = pb, y = loglik1)) +\n    geom_line() +\n    labs(x = \"possible values of pb with loglik above -7500\", \n         y = \"log Likelihood\")\n```\n:::\n\n\n#### Model 2: Sex Conditional Model (small 3 famly data set)\n\nAssumes probability of having a boy depends on whether you've had boys previously\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Find MLEs with 3-dimensional grid search\npbb <- seq(0, 1, length = 101)\npbg <- seq(0, 1, length = 101)\npbn <- seq(0, 1, length = 101)\nmodel2_grid <- expand.grid(pbb = pbb, pbg = pbg, pbn = pbn)\n\nlik <- model2_grid$pbn^1 * (1 - model2_grid$pbn)^3 * model2_grid$pbb^1 * \n  (1 - model2_grid$pbb)^1 * model2_grid$pbg^1 * (1 - model2_grid$pbg)^1\nloglik <- 1 * log(model2_grid$pbn) + 3 * log(1 - model2_grid$pbn) + \n  1 * log(model2_grid$pbb) + 1 * log(1 - model2_grid$pbb) + \n  1 * log(model2_grid$pbg) + 1 * log(1 - model2_grid$pbg)\n\n# Print results\nmax(lik)        # maximum likelihood over all combos of pbb, pbg, pbn\nmax(loglik)     # maximum loglikelihood over all combos of pbb, pbg, pbn\n\nmodel2_grid$pbb[loglik == max(loglik)]   # MLE of pbb\nmodel2_grid$pbg[loglik == max(loglik)]   # MLE of pbg\nmodel2_grid$pbn[loglik == max(loglik)]   # MLE of pbn\n\n# Store results\nmle_pbb_m2_small <- model2_grid$pbb[loglik == max(loglik)]   # MLE of pbb\nmle_pbg_m2_small <- model2_grid$pbg[loglik == max(loglik)]   # MLE of pbg\nmle_pbn_m2_small <- model2_grid$pbn[loglik == max(loglik)]   # MLE of pbn\n\nmax_L_m2_small <- max(lik)\nmax_logL_m2_small <- max(loglik)\n```\n:::\n\n\n### Model comparisons - Model 1 vs. Model 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlrt <- 2 * (max_logL_m2_small - max_logL_m1_small)   \nlrt                       # likelihood ratio test statistic\n1 - pchisq(lrt, df = 2)   # p-value for testing Ho: no diff between Models 1&2\n\n# AIC and BIC values for Models 1 and 2\naic1 <- -2 * max_logL_m1_small + 2 * 1\naic1\nbic1 <- -2 * max_logL_m1_small + log(8) * 1\nbic1\naic2 <- -2 * max_logL_m2_small + 2 * 3\naic2\nbic2 <- -2 * max_logL_m2_small + log(8) * 3\nbic2\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}